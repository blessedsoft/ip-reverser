apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ .Values.mongodb.name }}-pv
spec:
  capacity:
    storage: {{ .Values.mongodb.persistence.storage }}
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: hostpath
  hostPath:
    path: {{ .Values.mongodb.persistence.hostPath }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.mongodb.name }}-pvc
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: {{ .Values.mongodb.persistence.storage }}
  storageClassName: hostpath
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.mongodb.name }}-deployment
spec:
  replicas: {{ .Values.mongodb.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.mongodb.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.mongodb.name }}
    spec:
      containers:
        - name: {{ .Values.mongodb.name }}
          image: "{{ .Values.mongodb.image.repository }}:{{ .Values.mongodb.image.tag }}"
          ports:
            - containerPort: {{ .Values.mongodb.service.targetPort }}
          resources:
            requests:
              memory: "{{ .Values.mongodb.resources.requests.memory }}"
              cpu: "{{ .Values.mongodb.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.mongodb.resources.limits.memory }}"
              cpu: "{{ .Values.mongodb.resources.limits.cpu }}"
          volumeMounts:
            - name: {{ .Values.mongodb.name }}-data
              mountPath: /data/db
      volumes:
        - name: {{ .Values.mongodb.name }}-data
          persistentVolumeClaim:
            claimName: {{ .Values.mongodb.name }}-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.mongodb.name }}-service
spec:
  selector:
    app: {{ .Values.mongodb.name }}
  ports:
    - protocol: TCP
      port: {{ .Values.mongodb.service.port }}
      targetPort: {{ .Values.mongodb.service.targetPort }}
